<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>公子世无双，代码永流传</title>
      <link href="/2020/07/11/repository/"/>
      <url>/2020/07/11/repository/</url>
      
        <content type="html"><![CDATA[<h2><span id="wei-shi-me-yao-ba-dai-ma-huo-zhe-zi-yuan-shang-chuan-dao-github">为什么要把代码或者资源上传到github？</span></h2><h3><span id="1-fen-xiang-zi-ji-de-dai-ma-mian-shi-ke-yi-zhan-shi-zi-ji">1.分享自己的代码，面试可以展示自己</span></h3><h3><span id="2-ke-yi-zuo-chuang-tu-github-zi-dai-cdn-jia-su">2.可以做床图，github自带cdn加速</span></h3><pre class=" language-bash"><code class="language-bash">https://cdn.jsdelivr.net/gh/github用户名/github账号中的仓库名/资源名</code></pre><p>用这个方法访问资源可以加速，这个在博客后期优化中可以使用，床图就是把图资源全部放到一个仓库，然后从这个仓库中用cdn来调用这些资源</p><h3><span id="3-ke-yi-bu-shu-wo-men-de-bo-ke">3.可以部署我们的博客</span></h3><p>在这里就不得不说说github，码云gitee和Coding了，这三个都是可以部署的，我首先接触到的是github，github部署在国内访问就是很慢，后面换到码云gitee上，速度明显变快了。大概就是国内有点卡github吧！部署方式是差不多的，在gitee上添加一个ssh密钥，这个ssh和添加到github上面的一样，也就是说我们可以同时部署到github，gitee和Coding上面，我目前只部署过github和gitee，感觉gitee够用了，就没有在Coding上面部署了。</p><p>连接好ssh后，直接使用<strong>hexo s</strong>本地查看博客无误后，可以直接用<strong>hexo g -d</strong>来部署<br>ssh如何创建后面提到</p><h2><span id="zheng-chang-shang-chuan-de-liu-cheng">正常上传的流程</span></h2><h3><span id="yi-chuang-jian-yi-ge-cang-ku-bing-fu-zhi-cang-ku-https-di-zhi">一.创建一个仓库并复制仓库HTTPS地址</span></h3><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200711224247243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="记得勾选init README"><br><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200711224339978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="绿色得Code下面复制HTTPS地址"></p><h3><span id="er-sheng-cheng-ssh-mi-yao-lai-guan-lian-github-he-you-xiang">二.生成ssh密钥，来关联github和邮箱</span></h3><h4><span id="1-jian-cha-dian-nao-shi-fou-yi-jing-you-ssh-key">1.检查电脑是否已经有ssh key</span></h4><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> ~/.ssh<span class="token function">ls</span></code></pre><p>如果<strong>id_rsa.pub</strong>或<strong>id_dsa.pub</strong>文件，可以跳过步骤2，直接进入步骤3.</p><h4><span id="2-shou-xian-shi-yong-git-config-ming-ling-she-zhi-yong-hu-ming-he-di-zhi-bing-chan-sheng-rsa-key">2.首先，使用git config命令设置用户名和地址并产生rsa key</span></h4><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"设置的用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"设置的邮件地址"</span>ssh-keygen -t rsa -C <span class="token string">"设置的邮件地址"</span></code></pre><p>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了<br>然后在<strong>C盘user中.ssh文件中可以找到id_rsa.pub文件</strong>，复制里面的内容稍后使用</p><h3><span id="san-zai-github-zhong-tian-jia-ssh-mi-yao">三.在github中添加ssh密钥</span></h3><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200711230117454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="点击setting"></p><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/202007112301294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="点击SSH and GPG keys"></p><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200711230137877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="点击New SSH key"></p><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200711230146770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="将复制的文件内容填入，title随意，然后Add"></p><h3><span id="si-ce-shi-ssh-key">四.测试SSH key</span></h3><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><p>当你输入以上代码时，会有一段警告代码，如：</p><pre class=" language-bash"><code class="language-bash">The authenticity of host <span class="token string">'github.com (207.97.227.239)'</span> can't be established.<span class="token comment" spellcheck="true"># RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><span class="token comment" spellcheck="true"># Are you sure you want to continue connecting (yes/no)?</span></code></pre><p>这是正常的，你输入 yes 回车既可。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如：</p><pre class=" language-bash"><code class="language-bash">Enter passphrase <span class="token keyword">for</span> key <span class="token string">'/c/Users/Administrator/.ssh/id_rsa'</span><span class="token keyword">:</span></code></pre><p>当然如果你密码输错了，会再要求你输入，知道对了为止。<br>注意：输入密码时如果输错一个字就会不正确，使用删除键是无法更正的。<br>密码正确后你会看到下面这段话，如：</p><pre class=" language-bash"><code class="language-bash">Hi username<span class="token operator">!</span> You've successfully authenticated, but GitHub does not<span class="token comment" spellcheck="true"># provide shell access.</span></code></pre><p>如果用户名是正确的,你已经成功设置SSH密钥。如果你看到 “access denied” ，者表示拒绝访问，那么你就需要使用 https 去访问，而不是 SSH 。</p><h3><span id="wu-ben-di-cao-zuo">五.本地操作</span></h3><p>成功安装git后，右键项目，右键会出现两个新选项，分别是Git GUI Here和Git Bash Here，这里我们选择Git Bash Here，进入操作界面<br>输入以下代码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token string">"之前仓库复制的地址"</span></code></pre><p>这个步骤之后本地项目文件夹下面就会多出一个文件夹，这个文件夹的名字就是仓库的名字，然后把需要上传的文件全部复制到这个文件夹中<br>通过命令cd 进入该文件夹，然后输入以下代码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span> <span class="token comment" spellcheck="true">#把文佳佳下面的文件都添加进来</span><span class="token function">git</span> commit -m <span class="token string">"提交信息"</span> <span class="token comment" spellcheck="true">#提交信息相当于注释，可以是"first commit"</span><span class="token function">git</span> push -u origin master <span class="token comment" spellcheck="true">#把本地仓库push到github上面，需要输入github账号和密码</span></code></pre><h2><span id="yu-dao-de-bug">遇到的bug</span></h2><p>我当时是push的时候报错了，不知道是什么原因，最后发现问题是不小心删除了本地仓库的README.md文件，就是本地仓库如果没有github仓库中的readme文件是没有办法push的，当时第一次上传完觉得这个文件没用就删掉了，后面第二次上传就一直报错。<br>我们可以通过以下指令进行<strong>添加readme.md文件到本地仓库。</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> pull --rebase origin master</code></pre><p><strong>然后调用push即可</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push origin master</code></pre><p><strong>最后就上传成功了！解决了BUG！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 帅得乱七八糟的bug </tag>
            
            <tag> ssh-key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表白程序怎么发过去呢？好苦恼！</title>
      <link href="/2020/07/09/pyexe/"/>
      <url>/2020/07/09/pyexe/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-ru-he-sheng-cheng-windows-ke-zhi-xing-de-exe-wen-jian">Python如何生成windows可执行的exe文件</span></h1><h2><span id="wei-shi-me-yao-sheng-cheng-ke-zhi-xing-wen-jian">为什么要生成可执行文件</span></h2><ul><li>不需要安装对应的编程环境</li><li>可以将你的应用闭源</li><li>用户可以方便，快捷的直接使用</li></ul><h2><span id="da-bao-gong-ju">打包工具</span></h2><p><strong>pyinstaller</strong></p><h3><span id="an-zhuang-pyinstaller">安装pyinstaller</span></h3><pre><code>pip install pyinstaller</code></pre><h3><span id="pyinstaller-can-shu-zuo-yong">pyinstaller参数作用</span></h3><ul><li>-F表示生成单个可执行文件</li><li>-D -onedir创建一个目录，包含exe文件，但会依赖很多文件（默认选项）</li><li>-w表示去掉控制台窗口，着在GUI界面时非常有用。不过如果是命令行程序的话那就不能使用这个参数</li><li>-c -console，-nowindowed使用控制台，无界面（默认）</li><li>-p 表示你自己自定义需要加载的类路径，一般情况用不到</li><li>-i 表示可执行文件的图标</li><li>其他参数，可以通过pyinstaller –help查看</li></ul><h2><span id="sheng-cheng-exe-shi-zhan">生成exe实战</span></h2><h3><span id="sheng-cheng-zhi-ling">生成指令</span></h3><p>首先我们通过cd 到达工程目录，然后使用代码</p><pre><code>pyinstaller -Fw --icon=xin.ico love.py</code></pre><p>–icon=xin.ico 是指定生成exe软件的图表，这个xin.ico图标放在工程文件的目录下<br>love.py是要生成exe文件的原python文件</p><h3><span id="sheng-cheng-xiao-guo">生成效果</span></h3><p>指令执行后会生成一个dist文件夹，里面有生成exe文件，然后需要把表白图标也放到这个文件夹下，然后点开exe文件就可以运行了。<br><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708222028444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="生成效果"></p><h3><span id="biao-bai-ruan-jian-xiao-guo">表白软件效果！</span></h3><h4><span id="dian-kai-xiao-guo">点开效果</span></h4><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708222918849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70#pic_center" alt="点开效果"></p><h4><span id="dian-ji-x-de-xiao-guo">点击X的效果</span></h4><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708224723555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70#pic_center" alt="关是关不掉的"></p><h4><span id="dian-ji-bu-xi-huan-de-xiao-guo">点击不喜欢的效果</span></h4><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708224841834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70#pic_center" alt="不喜欢也是不行的"></p><h4><span id="dian-ji-xi-huan-de-xiao-guo">点击喜欢的效果</span></h4><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708224908511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70#pic_center" alt="只能点喜欢才能关闭"></p><h3><span id="zong-jie">总结</span></h3><p>除了点喜欢是关闭不了窗口的，给人一种霸道总裁的感觉，真是太棒了！<br>如果妹子使用任务管理器和直接关机来解决，那就直接放弃吧！她不懂浪漫。。。</p><h3><span id="zui-hou-shi-biao-bai-ruan-jian-de-dai-ma">最后是表白软件的代码</span></h3><p>代码其实很简单就是python一个包的使用，还可以用pygame给软件加配乐，但是配乐后生成exe有点小bug还没有解决，如果有同学解决了的可以联系我，我们一起实现男女协调，人人成家呀！！！</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> messagebox<span class="token comment" spellcheck="true"># import pygame</span><span class="token comment" spellcheck="true">#直接点击x的方法</span><span class="token keyword">def</span> <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   messagebox<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"先别走啊！"</span><span class="token punctuation">,</span>message<span class="token operator">=</span><span class="token string">"躲得过初一，躲不过十五！"</span><span class="token punctuation">)</span>   <span class="token keyword">return</span><span class="token comment" spellcheck="true">#点击喜欢后的方法</span><span class="token keyword">def</span> <span class="token function">Love</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#顶级窗口</span>    love<span class="token operator">=</span>Toplevel<span class="token punctuation">(</span>window<span class="token punctuation">)</span>    love<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"240x90+820+400"</span><span class="token punctuation">)</span>    love<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"好巧，我也是"</span><span class="token punctuation">)</span>    label<span class="token operator">=</span>Label<span class="token punctuation">(</span>love<span class="token punctuation">,</span>text <span class="token operator">=</span> <span class="token string">"真好"</span><span class="token punctuation">,</span>font <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#pack 定位</span>    label<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>    btn <span class="token operator">=</span> Button <span class="token punctuation">(</span>love <span class="token punctuation">,</span> text <span class="token operator">=</span><span class="token string">"确定"</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>heigh <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>command<span class="token operator">=</span>closeallwindow<span class="token punctuation">)</span>    btn<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>    love<span class="token punctuation">.</span>protocol<span class="token punctuation">(</span><span class="token string">"WM_DELETE_WINDOW"</span><span class="token punctuation">,</span> closelove<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#喜欢后的点击x的方法</span><span class="token keyword">def</span> <span class="token function">closelove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span><span class="token comment" spellcheck="true">#点击喜欢后确定的方法</span><span class="token keyword">def</span> <span class="token function">closeallwindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#destory 销毁</span>    window<span class="token punctuation">.</span>destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#点击不喜欢的方法</span><span class="token keyword">def</span> nolove <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    no_love <span class="token operator">=</span> Toplevel<span class="token punctuation">(</span>window<span class="token punctuation">)</span>    no_love <span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"240x90+820+400"</span><span class="token punctuation">)</span>    no_love<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"再考虑考虑呗"</span><span class="token punctuation">)</span>    label <span class="token operator">=</span> Label<span class="token punctuation">(</span>no_love<span class="token punctuation">,</span>text <span class="token operator">=</span><span class="token string">"麻烦你再想想办法！"</span><span class="token punctuation">,</span>font <span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    label<span class="token punctuation">.</span>pack <span class="token punctuation">(</span><span class="token punctuation">)</span>    btn <span class="token operator">=</span> Button<span class="token punctuation">(</span>no_love<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"确定"</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> heigh<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> command<span class="token operator">=</span>no_love<span class="token punctuation">.</span>destroy<span class="token punctuation">)</span>    btn<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>    no_love<span class="token punctuation">.</span>protocol<span class="token punctuation">(</span><span class="token string">"WM_DELETE_WINDOW"</span><span class="token punctuation">,</span> closenolove<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#不喜欢再考虑点击x的方法</span><span class="token keyword">def</span> closenolove <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span><span class="token comment" spellcheck="true">#创建窗口</span>window <span class="token operator">=</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#窗口标题</span>window <span class="token punctuation">.</span>title <span class="token punctuation">(</span><span class="token string">"你喜欢我吗?"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#窗口的大小      中间用x连接</span>window<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"580x710"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#窗口的位置  几何</span>window<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"+560+150"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#protocol 用户关闭窗口触发的事件</span>window<span class="token punctuation">.</span>protocol <span class="token punctuation">(</span><span class="token string">"WM_DELETE_WINDOW"</span><span class="token punctuation">,</span>closeWindow<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标签控件</span>label<span class="token operator">=</span>Label<span class="token punctuation">(</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"hey 41！"</span><span class="token punctuation">,</span>font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#定位  网格布局</span>label<span class="token punctuation">.</span>grid <span class="token punctuation">(</span>sticky<span class="token operator">=</span>W <span class="token punctuation">)</span><span class="token comment" spellcheck="true">#标签控件</span>label1<span class="token operator">=</span>Label<span class="token punctuation">(</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"41，你喜欢我吗？"</span><span class="token punctuation">,</span>font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"微软雅黑"</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#定位  网格布局    sticky对齐方式 E W S  N</span>label1<span class="token punctuation">.</span>grid <span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>column<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>sticky<span class="token operator">=</span>E<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#显示图片</span>photo<span class="token operator">=</span>PhotoImage<span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token string">"./表白图标.png"</span><span class="token punctuation">)</span>imageLable<span class="token operator">=</span>Label<span class="token punctuation">(</span>window<span class="token punctuation">,</span>image <span class="token operator">=</span> photo <span class="token punctuation">)</span>imageLable<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>columnspan <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#按钮控件</span>btn <span class="token operator">=</span> Button <span class="token punctuation">(</span>window<span class="token punctuation">,</span>text <span class="token operator">=</span><span class="token string">"喜欢"</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span>heigh <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>command <span class="token operator">=</span> Love<span class="token punctuation">)</span>btn<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row <span class="token operator">=</span><span class="token number">3</span> <span class="token punctuation">,</span>column <span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">,</span>sticky <span class="token operator">=</span> W <span class="token punctuation">)</span>btn1<span class="token operator">=</span>Button <span class="token punctuation">(</span>window<span class="token punctuation">,</span>text <span class="token operator">=</span><span class="token string">"不喜欢"</span><span class="token punctuation">,</span>command <span class="token operator">=</span>nolove<span class="token punctuation">)</span>btn1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>column<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>sticky <span class="token operator">=</span> E<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># file=r'D:\Graduation project\untitled5\love.mp3'</span><span class="token comment" spellcheck="true"># pygame.mixer.init()</span><span class="token comment" spellcheck="true"># track=pygame.mixer.music.load(file)</span><span class="token comment" spellcheck="true"># pygame.mixer.music.play()</span><span class="token comment" spellcheck="true">#显示窗口  消息循环</span>window <span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200709121440737.PNG#pic_center" alt="男女协调，人人成家！"><br>如果对大家有帮助，或者博得了女朋友一笑，大家可以打赏我哦！<br><label style="color:green">最后助大家早日脱单！</label></p>]]></content>
      
      
      <categories>
          
          <category> 那些花里胡哨的代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 表白程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是hash表呢？</title>
      <link href="/2020/07/07/hashtable/"/>
      <url>/2020/07/07/hashtable/</url>
      
        <content type="html"><![CDATA[<h1><span id="ha-xi-biao">哈希表！？</span></h1><pre><code>大家在第一次听到哈希表的时候，会怎么去想这个东西呢？反正我是觉得挺神秘的！一定是个很厉害的算法，其实不是，是一个很菜鸟的算法！有多菜呢？我都看得懂！哈哈哈，那我们就来一起看看什么是哈希表吧！</code></pre><h2><span id="ha-xi-biao-jian-shu">哈希表简述</span></h2><pre><code>散列表（Hash table，也叫哈希表），是根据关键码值(Key value)而直接进行访问的数据结构。也就是说，它通过把关键码值映射到表中一个位置来访问记录，以加快查找的速度。这个映射函数叫做散列函数，存放记录的数组叫做散列表。给定表M，存在函数f(key)，对任意给定的关键字值key，代入函数后若能得到包含该关键字的记录在表中的地址，则称表M为哈希(Hash）表，函数f(key)为哈希(Hash) 函数。</code></pre><p><label style="color:red"><strong>用自己的话来说</strong></label>    <strong>我们给数据找个代号，然后直接用代号来访问这个数据，这个算法就对应了c++里面的map和unordered_map</strong></p><h2><span id="map-he-unordered-map-de-qu-bie">map和unordered_map的区别</span></h2><h3><span id="yin-ru-tou-wen-jian-bu-tong">引入头文件不同</span></h3><table><thead><tr><th>类别</th><th>头文件</th></tr></thead><tbody><tr><td>map</td><td>#include &lt; map &gt;</td></tr><tr><td>unordered_map</td><td>#include &lt; unordered_map &gt;</td></tr></tbody></table><h3><span id="shi-xian-ji-zhi-bu-tong">实现机制不同</span></h3><table><thead><tr><th>类别</th><th>实现机制</th></tr></thead><tbody><tr><td>map</td><td>红黑树</td></tr><tr><td>unordered_map</td><td>hash表</td></tr></tbody></table><h3><span id="you-que-dian-bi-jiao">优缺点比较</span></h3><table><thead><tr><th>类别</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>map</td><td>有序性，简化操作</td><td>空间占用率高</td></tr><tr><td>unordered_map</td><td>内部哈希表，查找快</td><td>建立比较耗费时间</td></tr></tbody></table><h2><span id="liang-shu-zhi-he-leetcode-cong-ti-mu-ren-shi-ha-xi">两数之和（leetcode）从题目认识哈希</span></h2><h3><span id="ti-mu-chan-shu">题目阐述</span></h3><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。<br>示例:</p><pre><code>给定 nums = [2, 7, 11, 15],target = 9因为 nums[0] + nums[1] = 2 + 7 =9所以返回 [0, 1]</code></pre><h3><span id="bao-li-po-jie">暴力破解</span></h3><p><del>夏天虽热，也要注意保暖，不要感冒，多喝烫水，先来一手直男破解</del></p><p>大力出奇迹，冲鸭！爆破开始！</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token punctuation">:</span>    vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token function">twoSum</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> int target<span class="token punctuation">)</span> <span class="token punctuation">{</span>    int len<span class="token operator">=</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token number">-1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>i<span class="token punctuation">,</span>j<span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3><span id="liang-ci-ha-xi">两次哈希</span></h3><p>对于第一种暴力破解，相当于遍历了所有的两数之和的情况，如果满足就输入，这是很浪费时间的。<br>我们使用哈希来优化：<br>1.unordered_map内部显示机制是hash表，更贴合算法，我们使用unordered_map<br>2.<br><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200708122710419.jpg#pic_center" alt="让我们一起来看一下算法流程图吧!"></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token punctuation">:</span>    vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token function">twoSum</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> int target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        unordered_map<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token operator">></span> m<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            m<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//向map中添加元素</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span>m<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> m<span class="token punctuation">[</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span>           <span class="token comment" spellcheck="true">//如果m中存在对应的键值，并且不为i</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>i <span class="token punctuation">,</span> m<span class="token punctuation">[</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3><span id="yi-ci-ha-xi">一次哈希</span></h3><p>和两次哈希不同的是，在压入的同时完成了查询。<br>那这样会不会漏掉情况呢？是不会的！<br>就好比力的作用是相互的，后面出现了能和前面匹配的数据，前面没找到后面，但是后面可以找到前面的数字。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token punctuation">:</span>    vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token function">twoSum</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>int<span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> int target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        unordered_map<span class="token operator">&lt;</span>int<span class="token punctuation">,</span>int<span class="token operator">></span> m<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>int i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span>m<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">//m中存在对应的键值</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>m<span class="token punctuation">[</span>target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>i<span class="token punctuation">}</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">//m[target-nums[i]]为已经加入map的元素的索引，所以小于本轮循环中的i，放在前面</span>            m<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//向map中添加元素</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3><span id="san-chong-jie-fa-de-shi-jian-kong-jian-fu-za-du-bi-jiao">三种解法的时间空间复杂度比较</span></h3><h4><span id="shi-me-shi-shi-jian-fu-za-du">什么是时间复杂度？</span></h4><p><label style="color:red"><strong>时间复杂度</strong></label>：<strong>时间复杂度的计算并不是计算程序集体运行的时间，二十算法执行语句的次数</strong></p><h4><span id="shi-me-shi-kong-jian-fu-za-du">什么是空间复杂度？</span></h4><p><label style="color:red"><strong>空间复杂度</strong></label>：<strong>空间复杂度是对一个算法在运行过程中临时占用储存空间大小的量度</strong></p><h4><span id="san-chong-jie-fa-fu-za-du-fen-xi">三种解法复杂度分析</span></h4><p><label style="color:red"><strong>暴力破解</strong></label>：<br>时间复杂度：O(n^2)<br>两层for循环，对于每个元素，耗费O(n)的时间，所以时间复杂度为O(n^2)<br>空间复杂度：O(1)<br><label style="color:red"><strong>二次哈希</strong></label>：<br>时间复杂度：O(n)<br>我们把包含有n个元素的列表遍历两次，由于哈希表将查找时间缩短到O(1)，所以时间复杂度为O(n)<br>空间复杂度：O(n)<br>所需的额外空间取决与哈希表中存储的元素数据，该表中存储了n个元素<br><label style="color:red"><strong>一次哈希</strong></label>：<br>时间复杂度：O(n)<br>我们把包含有n个元素的列表遍历一次，由于哈希表将查找时间缩短到O(1)，所以时间复杂度为O(n)<br>空间复杂度：O(n)<br>所需的额外空间取决与哈希表中存储的元素数据，该表最多需要存储n个元素</p><table><thead><tr><th>算法</th><th>时间复杂度</th><th>空间复杂度</th></tr></thead><tbody><tr><td>暴力破解</td><td>O(n^2)</td><td>O(1)</td></tr><tr><td>二次哈希</td><td>O(n)</td><td>O(n)</td></tr><tr><td>一次哈希</td><td>O(n)</td><td>O(n)</td></tr></tbody></table><h3><span id="yu-dao-de-wen-ti">遇到的问题</span></h3><p>在开始提交的时候没有通过所有样例<br><img src="/images/loading.gif" data-original="https://img-blog.csdnimg.cn/20200516170623441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM2ODMy,size_16,color_FFFFFF,t_70" alt="差不多只能拿到一半的分"></p><p>原因是没有添加判断，<label style="color:red"><strong>m.find(target-nums[i]) !=m.end()</strong></label><br>引用具有指定键的元素的位置的迭代器，如果找不到具有键的匹配项，则引用映射中最后一个元素后面的位置。<br>即m.end()，我们需要判断是否查询到值。</p>]]></content>
      
      
      <categories>
          
          <category> 算法之从入门到放弃 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 哈希表 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
